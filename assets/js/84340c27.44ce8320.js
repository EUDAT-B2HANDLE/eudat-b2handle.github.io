"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3404],{3710:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>r,toc:()=>c});var i=t(4848),a=t(8453);const l={sidebar_position:4},s="Searching",r={id:"b2handle-tutorial/searching",title:"Searching",description:"Searching for a Handle. The  search_handle() is responsible to search for Handles with a specific key and value. Please note that searching requires access to a search servlet whose access information, if it differs from the handle server, has to be specified at client instantiation.",source:"@site/docs/b2handle-tutorial/searching.md",sourceDirName:"b2handle-tutorial",slug:"/b2handle-tutorial/searching",permalink:"/docs/b2handle-tutorial/searching",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/b2handle-tutorial/searching.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Start using the library",permalink:"/docs/b2handle-tutorial/using-the-library"},next:{title:"Congratulations!",permalink:"/docs/b2handle-tutorial/congratulations"}},h={},c=[{value:"Quick Links to Technical Documentation",id:"quick-links-to-technical-documentation",level:3}];function o(e){const n={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"searching",children:"Searching"}),"\n",(0,i.jsxs)(n.p,{children:["Searching for a Handle. The  ",(0,i.jsx)(n.code,{children:"search_handle()"})," is responsible to search for Handles with a specific key and value. Please note that searching requires access to a search servlet whose access information, if it differs from the handle server, has to be specified at client instantiation."]}),"\n",(0,i.jsxs)(n.p,{children:["In the definition of the credentials file, we found the entries ",(0,i.jsx)(n.em,{children:"reverselookup_username"})," and ",(0,i.jsx)(n.em,{children:"reverselookup_password"}),". These are used to authenticate with a specific local Handle server to retrieve the PID when given some key-value pair in the Handle record. Assume you just know some of the metadata stored with a PID but not the full PID. How can you get to the URL field to retrieve the data?"]}),"\n",(0,i.jsxs)(n.p,{children:["We can fetch all data with a certain checksum.\nMake sure that your credential json file contains the keys ",(0,i.jsx)(n.em,{children:"reverselookup_username"})," and ",(0,i.jsx)(n.em,{children:"reverselookup_password"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:"credentials = PIDClientCredentials.load_from_JSON('<full_path>/cred_file.json')\nclient = EUDATHandleClient.instantiate_with_credentials(credentials)\nargs = dict([('CHECKSUM', md5sum)])\nresult = ec.search_handle(**args)\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"result"})," conatins a list of all PIDs where a fiels ",(0,i.jsx)(n.strong,{children:"CHECKSUM"})," is defined and has the value stored in ",(0,i.jsx)(n.strong,{children:"md5sum"}),".\nNow we can retrieve the location of the first hit in the list."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:"url = ec.get_value_from_handle(result[0], 'URL')\nprint(url) \n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note,"})," that this functionality is an EUDAT extension to the standard Handle server functionalities. You can also only query reversely on a local Handle server, not across the global Handle server."]}),"\n",(0,i.jsxs)(n.p,{children:["The reverse look up function works also with wildcards:\nWe know that B2SAFE uses PIDs and stores the iRODS path in te field ",(0,i.jsx)(n.strong,{children:"URL"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-py",children:"rev = dict([('URL', 'irods:*')])\nresult = ec.search_handle(**rev)\n"})}),"\n",(0,i.jsx)(n.p,{children:"This will return a list of all PIDs stored in iRODS."}),"\n",(0,i.jsx)(n.h3,{id:"quick-links-to-technical-documentation",children:"Quick Links to Technical Documentation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"http://eudat-b2handle.github.io/B2HANDLE/handleclient.html#instantiation",children:"Instantiate Client"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"http://eudat-b2handle.github.io/B2HANDLE/handleclient.html#authentication",children:"Authentication"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"http://eudat-b2handle.github.io/B2HANDLE/handleclient.html#authentication-using-client-certificates",children:"Authentication using client certificates"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"http://eudat-b2handle.github.io/B2HANDLE/handleclient.html#authentication-using-username-and-password",children:"Authentication using username and password"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"http://eudat-b2handle.github.io/B2HANDLE/handleclient.html#basic-handle-interaction",children:"Basic Handle interaction"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"http://eudat-b2handle.github.io/B2HANDLE/handleclient.html#managing-multiple-urls-with-10320-loc",children:"Managing multiple URLs with 10320/loc"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"http://eudat-b2handle.github.io/B2HANDLE/handleclient.html#full-method-documentation",children:"Full method documentation"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"http://eudat-b2handle.github.io/B2HANDLE/handleclient.html#constructors",children:"Constructors"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"http://eudat-b2handle.github.io/B2HANDLE/handleclient.html#handle-record-methods",children:"Handle record methods"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"http://eudat-b2handle.github.io/B2HANDLE/handleclient.html#methods-for-managing-10320-loc-entries",children:"Methods for managing 10320/loc entries"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"http://eudat-b2handle.github.io/B2HANDLE/handleclient.html#helper-methods",children:"Helper methods"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"http://eudat-b2handle.github.io/B2HANDLE/handleclient.html#module-b2handle.utilhandle",children:"Utilities"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"http://eudat-b2handle.github.io/B2HANDLE/handleclient.html#module-b2handle.clientcredentials",children:"Client credentials"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"http://eudat-b2handle.github.io/B2HANDLE/handleclient.html#module-b2handle.handleexceptions",children:"Exceptions"})}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>r});var i=t(6540);const a={},l=i.createContext(a);function s(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);