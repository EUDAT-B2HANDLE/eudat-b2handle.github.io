"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8408],{6215:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>o,frontMatter:()=>l,metadata:()=>h,toc:()=>s});var i=t(4848),a=t(8453);const l={sidebar_position:3},r="Start using the library",h={id:"pyhandle-tutorial/using-the-library",title:"Start using the library",description:"Examples on how to use the library:",source:"@site/docs/pyhandle-tutorial/using-the-library.md",sourceDirName:"pyhandle-tutorial",slug:"/pyhandle-tutorial/using-the-library",permalink:"/docs/pyhandle-tutorial/using-the-library",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/pyhandle-tutorial/using-the-library.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Authentication",permalink:"/docs/pyhandle-tutorial/authenticate-with-the-library"},next:{title:"B2HANDLE - Tutorial",permalink:"/docs/category/b2handle---tutorial"}},d={},s=[{value:"Libraries to import",id:"libraries-to-import",level:2},{value:"Instantiate your client",id:"instantiate-your-client",level:2},{value:"Manage your handle",id:"manage-your-handle",level:2},{value:"The Example",id:"the-example",level:3},{value:"The data of the test handle",id:"the-data-of-the-test-handle",level:3},{value:"Create a test handle",id:"create-a-test-handle",level:3},{value:"Read test handle",id:"read-test-handle",level:3},{value:"Read full Handle record",id:"read-full-handle-record",level:3},{value:"Modify test handle",id:"modify-test-handle",level:3},{value:"Delete test handle",id:"delete-test-handle",level:3},{value:"Quick Links to Technical Documentation",id:"quick-links-to-technical-documentation",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"start-using-the-library",children:"Start using the library"}),"\n",(0,i.jsxs)(n.p,{children:["Examples on how to ",(0,i.jsx)(n.strong,{children:"use"})," the library:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"libraries to use"}),"\n",(0,i.jsx)(n.li,{children:"instantiate a client"}),"\n",(0,i.jsx)(n.li,{children:"manage your handle"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"With this example you can start using the pyhandle library in 5 minutes."}),"\n",(0,i.jsx)(n.h2,{id:"libraries-to-import",children:"Libraries to import"}),"\n",(0,i.jsx)(n.p,{children:"At the beginning of your python code just import"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-md",children:"#!/usr/bin/env python\n\nimport sys\nimport b2handle\nfrom pyhandle.clientcredentials import PIDClientCredentials\nfrom pyhandle.handleclient import EUDATHandleClient\nfrom pyhandle.handleexceptions import *\nfrom requests.exceptions import SSLError\n\n"})}),"\n",(0,i.jsx)(n.h2,{id:"instantiate-your-client",children:"Instantiate your client"}),"\n",(0,i.jsx)(n.p,{children:"The first thing you have to do is to instantiate your client."}),"\n",(0,i.jsx)(n.p,{children:"But before that you have to create a json file with the necessary data to connect to the handle server.\nThe file uses certificates in order to authenticate with the Handle server."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:"mycredentials.json",children:'\n{\n  "handle_server_url": "https://myserver.com",\n  "private_key": "privkey.pem",\n  "certificate_only": "certificate_only.pem",\n  "prefix": "21.11111",\n  "handleowner": "301:11239/ADMINUSER",\n  "HTTPS_verify": "True"\n}\n\n'})}),"\n",(0,i.jsx)(n.p,{children:"Then instantiate your client"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"    print \"Creating credentials\"\n    cred = PIDClientCredentials.load_from_JSON('my_credentials.json')\n    client = PyHandleClient('rest').instantiate_with_credentials(cred)\n    \n    print('PID prefix ' + cred.get_prefix())\n    print('Server ' + cred.get_server_URL())\n\n"})}),"\n",(0,i.jsx)(n.h2,{id:"manage-your-handle",children:"Manage your handle"}),"\n",(0,i.jsx)(n.h3,{id:"the-example",children:"The Example"}),"\n",(0,i.jsx)(n.p,{children:"The example we are going to follow is to create is as follows"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Create a test handle with the name MYTEST-HANDLE with the URL ",(0,i.jsx)(n.a,{href:"http://www.example.com/1",children:"http://www.example.com/1"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Read the test handle"}),"\n",(0,i.jsxs)(n.li,{children:["Update the test handle by updating the URL to ",(0,i.jsx)(n.a,{href:"http://www.example.com/2",children:"http://www.example.com/2"})]}),"\n",(0,i.jsx)(n.li,{children:"Delete the handle"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"the-data-of-the-test-handle",children:"The data of the test handle"}),"\n",(0,i.jsx)(n.p,{children:"In this section we set the data for the test handle."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"    TEST_SUFFIX='MYTEST-HANDLE'\n    VALUE_ORIG='http://www.example.com/1'\n    VALUE_AFTER='http://www.example.com/2'\n    handle = cred.get_prefix() + '/' + TEST_SUFFIX\n"})}),"\n",(0,i.jsx)(n.p,{children:"Now that we have the data lets start managing the handle."}),"\n",(0,i.jsx)(n.h3,{id:"create-a-test-handle",children:"Create a test handle"}),"\n",(0,i.jsxs)(n.p,{children:["The creation of a handle is the first available action which is supported with  ",(0,i.jsx)(n.code,{children:"register_handle"}),". ",(0,i.jsx)(n.a,{href:"https://eudat-b2handle.github.io/PYHANDLE/pyhandleclientrest.html#basic-handle-interaction",children:"Basic interactions"})]}),"\n",(0,i.jsx)(n.p,{children:"You may either register a new Handle with a unique random name (random UUID) or with a predefine value."}),"\n",(0,i.jsx)(n.p,{children:"In this example we are creating a handle with the name\nTEST_SUFFIX='MYTEST-HANDLE'"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'    # Create test\n    print "Creating handle " + handle\n    create_result = client.register_handle(handle, VALUE_ORIG)\n\n    if create_result == handle:\n        print "OK: Create handle successful."\n    else:\n        print "PROBLEM: Create handle returned unexpected response."\n'})}),"\n",(0,i.jsx)(n.h3,{id:"read-test-handle",children:"Read test handle"}),"\n",(0,i.jsxs)(n.p,{children:["With the ",(0,i.jsx)(n.code,{children:"get_value_from_handle"})," you may retrieve a single value from a single Handle. If several entries with this key exist, the methods returns the first one. If the handle does not exist, the method will raise an exception .",(0,i.jsx)(n.a,{href:"https://eudat-b2handle.github.io/PYHANDLE/pyhandleclientrest.html#basic-handle-interaction",children:"Basic interactions"})]}),"\n",(0,i.jsx)(n.p,{children:"In this example we are reading the predefined handle with key=URL."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'    # Read test\n    key = \'URL\'\n    read_value = client.get_value_from_handle(handle, key)\n        \n    if read_value == VALUE_ORIG:\n        print "OK: Read handle successful."\n    else:\n        print "PROBLEM: Read handle returned unexpected response."\n     \n'})}),"\n",(0,i.jsx)(n.h3,{id:"read-full-handle-record",children:"Read full Handle record"}),"\n",(0,i.jsxs)(n.p,{children:["With the ",(0,i.jsx)(n.code,{children:" retrieve_handle_record()"})," you may retrieve a full handle record. If several entries with this key exist, the methods returns the first one. If the handle does not exist, the method will raise an exception .",(0,i.jsx)(n.a,{href:"https://eudat-b2handle.github.io/PYHANDLE/pyhandleclientrest.html#basic-handle-interaction",children:"Basic interactions"})]}),"\n",(0,i.jsx)(n.p,{children:"In this example we are reading the predefined handle with key=URL."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'    # Read test\n    read_value = client.retrieve_handle_record(handle) \n        \n    if read_value != \u039d\u039f\u039d\u0395:\n        print "OK: Handle exists."\n    else:\n        print "PROBLEM: Read handle returned unexpected response."\n     \n'})}),"\n",(0,i.jsx)(n.h3,{id:"modify-test-handle",children:"Modify test handle"}),"\n",(0,i.jsxs)(n.p,{children:["The library supports the modification of a value in the handle. ",(0,i.jsx)(n.a,{href:"https://eudat-b2handle.github.io/PYHANDLE/pyhandleclientrest.html#basic-handle-interaction",children:"Basic interactions"})]}),"\n",(0,i.jsxs)(n.p,{children:["With ",(0,i.jsx)(n.code,{children:"modify_handle_value()"})," a user can modify any number of values in a specific Handle record."]}),"\n",(0,i.jsx)(n.p,{children:"In this example we are going to update the URL of the handle record with the value VALUE_AFTER"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'    # Modify test\n    key = \'URL\'\n    client.modify_handle_value(handle, **{key: VALUE_AFTER} )\n    get_value_result = client.get_value_from_handle(handle, key)\n\n    if get_value_result == VALUE_AFTER:\n        print "OK: Modify handle successful."\n    else:\n        print "CRITICAL: Modify handle value returned unexpected value."\n        print "Expected : " + VALUE_AFTER\n        print "Returned : " + get_value_result\n'})}),"\n",(0,i.jsx)(n.h3,{id:"delete-test-handle",children:"Delete test handle"}),"\n",(0,i.jsxs)(n.p,{children:["The library supports the Deletion of the handle and its handle record with the ",(0,i.jsx)(n.code,{children:"delete_function"}),". ",(0,i.jsx)(n.a,{href:"https://eudat-b2handle.github.io/PYHANDLE/pyhandleclientrest.html#basic-handle-interaction",children:"Basic interactions"})]}),"\n",(0,i.jsx)(n.p,{children:"In this example we are going to delete the handle we previously created."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'    # Delete test\n    delete_result = client.delete_handle(handle)\n    print "OK: Delete handle successfully."\n\n'})}),"\n",(0,i.jsx)(n.h2,{id:"quick-links-to-technical-documentation",children:"Quick Links to Technical Documentation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://eudat-b2handle.github.io/PYHANDLE/pyhandleclientrest.html#instantiation",children:"Instantiate Client"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://eudat-b2handle.github.io/PYHANDLE/pyhandleclientrest.html#authentication",children:"Authentication"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://eudat-b2handle.github.io/PYHANDLE/pyhandleclientrest.html#authentication-using-client-certificates",children:"Authentication using client certificates"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://eudat-b2handle.github.io/PYHANDLE/pyhandleclientrest.html#authentication-using-username-and-password",children:"Authentication using username and password"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://eudat-b2handle.github.io/PYHANDLE/pyhandleclientrest.html#basic-handle-interaction",children:"Basic Handle interaction"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://eudat-b2handle.github.io/PYHANDLE/pyhandleclientrest.html#full-method-documentation",children:"Full method documentation"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://eudat-b2handle.github.io/PYHANDLE/pyhandleclientrest.html#constructors",children:"Constructors"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://eudat-b2handle.github.io/PYHANDLE/pyhandleclientrest.html#handle-record-methods",children:"Handle record methods"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://eudat-b2handle.github.io/PYHANDLE/pyhandleclientrest.html#helper-methods",children:"Helper methods"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://eudat-b2handle.github.io/PYHANDLE/pyhandleclientrest.html#module-pyhandle.utilhandle",children:"Utilities"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://eudat-b2handle.github.io/PYHANDLE/pyhandleclientrest.html#module-pyhandle.clientcredentials",children:"Client credentials"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://eudat-b2handle.github.io/PYHANDLE/pyhandleclientrest.html#module-pyhandle.handleexceptions",children:"Exceptions"})}),"\n"]})]})}function o(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>h});var i=t(6540);const a={},l=i.createContext(a);function r(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function h(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);